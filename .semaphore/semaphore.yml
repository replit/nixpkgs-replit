version: v1.0
name: test
agent:
  machine:
    type: e1-standard-4
    os_image: ubuntu2004
fail_fast:
  stop:
    when: "true"
auto_cancel:
  running:
    when: branch != 'master'
blocks:
  - name: Run linters
    task:
      prologue:
        commands:
          # Install nix
          - curl -L https://nixos.org/nix/install | sh
          - source /home/semaphore/.nix-profile/etc/profile.d/nix.sh

          # Install required linters
          - nix-env -iA nixpkgs.nixpkgs-fmt

          # Clone the source code
          - checkout
      jobs:
        - name: Make sure files are nixfmt'ed
          commands:
            - nixpkgs-fmt --check default.nix overlay.nix hydra pkgs

  - name: Build overlay packages
    task:
      prologue:
        commands:
          - curl -L https://nixos.org/nix/install | sh
          - source /home/semaphore/.nix-profile/etc/profile.d/nix.sh
          - checkout
      env_vars:
        - name: NIXPKGS_ALLOW_INSECURE
          value: "1"
        - name: NIXPKGS_ALLOW_UNFREE
          value: "1"
      jobs:
        - name: Build packages
          matrix:
            - env_var: NIXPKGS_CHANNEL
              values:
                - nixpkgs-legacy
                - nixpkgs-21.11
                - nixpkgs-22.05
                - nixpkgs-22.11
                - nixpkgs-unstable
          commands:
            - mkdir /tmp/$NIXPKGS_CHANNEL
            - sh build.sh $NIXPKGS_CHANNEL
            - tar -xvf $NIXPKGS_CHANNEL.tar.gz -C /tmp/$NIXPKGS_CHANNEL
            - nix-build /tmp/$NIXPKGS_CHANNEL/nixpkgs/default.nix -A replitPackages
        - name: Build modules
          matrix:
            - env_var: NIXPKGS_CHANNEL
              values:
                - nixpkgs-22.11
          commands:
            - mkdir /tmp/$NIXPKGS_CHANNEL
            - sh build.sh $NIXPKGS_CHANNEL
            - tar -xvf $NIXPKGS_CHANNEL.tar.gz -C /tmp/$NIXPKGS_CHANNEL
            - nix-build /tmp/$NIXPKGS_CHANNEL/nixpkgs/default.nix -A replitPackages.modules

promotions:
  - name: Push overlays to GCS
    pipeline_file: push.yml
    auto_promote:
      when: "result = 'passed' and branch = 'main'"
